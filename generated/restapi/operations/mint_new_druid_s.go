// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// MintNewDRUIDSHandlerFunc turns a function with the right signature into a mint new d r uids handler
type MintNewDRUIDSHandlerFunc func(MintNewDRUIDSParams) middleware.Responder

// Handle executing the request and returning a response
func (fn MintNewDRUIDSHandlerFunc) Handle(params MintNewDRUIDSParams) middleware.Responder {
	return fn(params)
}

// MintNewDRUIDSHandler interface for that can handle valid mint new d r uids params
type MintNewDRUIDSHandler interface {
	Handle(MintNewDRUIDSParams) middleware.Responder
}

// NewMintNewDRUIDS creates a new http.Handler for the mint new d r uids operation
func NewMintNewDRUIDS(ctx *middleware.Context, handler MintNewDRUIDSHandler) *MintNewDRUIDS {
	return &MintNewDRUIDS{Context: ctx, Handler: handler}
}

/*MintNewDRUIDS swagger:route POST /identifiers/druids mintNewDRUids

MintNewDRUIDS mint new d r uids API

*/
type MintNewDRUIDS struct {
	Context *middleware.Context
	Handler MintNewDRUIDSHandler
}

func (o *MintNewDRUIDS) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewMintNewDRUIDSParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
