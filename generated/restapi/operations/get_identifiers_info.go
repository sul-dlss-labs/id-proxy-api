// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetIdentifiersInfoHandlerFunc turns a function with the right signature into a get identifiers info handler
type GetIdentifiersInfoHandlerFunc func(GetIdentifiersInfoParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetIdentifiersInfoHandlerFunc) Handle(params GetIdentifiersInfoParams) middleware.Responder {
	return fn(params)
}

// GetIdentifiersInfoHandler interface for that can handle valid get identifiers info params
type GetIdentifiersInfoHandler interface {
	Handle(GetIdentifiersInfoParams) middleware.Responder
}

// NewGetIdentifiersInfo creates a new http.Handler for the get identifiers info operation
func NewGetIdentifiersInfo(ctx *middleware.Context, handler GetIdentifiersInfoHandler) *GetIdentifiersInfo {
	return &GetIdentifiersInfo{Context: ctx, Handler: handler}
}

/*GetIdentifiersInfo swagger:route GET /identifiers getIdentifiersInfo

GetIdentifiersInfo get identifiers info API

*/
type GetIdentifiersInfo struct {
	Context *middleware.Context
	Handler GetIdentifiersInfoHandler
}

func (o *GetIdentifiersInfo) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetIdentifiersInfoParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
